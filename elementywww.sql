-- phpMyAdmin SQL Dump
-- version 3.4.5
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Czas wygenerowania: 04 Sty 2012, 14:15
-- Wersja serwera: 5.5.16
-- Wersja PHP: 5.3.8

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Baza danych: `elementywww`
--

-- --------------------------------------------------------

--
-- Struktura tabeli dla  `articles`
--

CREATE TABLE IF NOT EXISTS `articles` (
  `i_id` int(11) NOT NULL AUTO_INCREMENT,
  `i_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `i_text` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`i_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=25 ;

--
-- Zrzut danych tabeli `articles`
--

INSERT INTO `articles` (`i_id`, `i_name`, `i_text`) VALUES
(1, 'Instalacja/Konfiguracja narzędzi.', '<div id="text">\r\n<p>W pierwszym artykule pokażę jakie narzędzia są nam  potrzebne do pracy oraz jak skonfigurować w systemach Windows,  Linux, Mac. Narzędzia to:</p>\r\n<ul>\r\n    <li><a href="http://pl.wikipedia.org/wiki/Apache_%28serwer%29">serwer Apache</a></li>\r\n    <li><a href="http://pl.wikipedia.org/wiki/PHP">język skryptowy PHP</a></li>\r\n    <li><a href="http://pl.wikipedia.org/wiki/MySQL">baza danych MySQL</a></li>\r\n</ul>\r\n<p>Skorzystamy z gotowego pakietu <a href="http://pl.wikipedia.org/wiki/XAMPP">XAMPP</a>,  który składa się z serwera Apache, PHP, MySQL. Nie będę tutaj  opisywał instalacji ponieważ jest to już zrobione. Podam linka dla  poszczególnych systemów:</p>\r\n<ul>\r\n    <li>Windows - <a href="http://www.pomoc.joomla.pl/content/view/688/51">	http://www.pomoc.joomla.pl/content/view/688/51</a></li>\r\n    <li>Linux - Ubuntu 	<a href="https://help.ubuntu.com/community/ApacheMySQLPHP">https://help.ubuntu.com/community/ApacheMySQLPHP</a></li>\r\n    <li>Mac - <a href="http://www.youtube.com/watch?v=-rWSREjzrm8">http://www.youtube.com/watch?v=-rWSREjzrm8</a></li>\r\n</ul>\r\n</div>\r\n<p>Środowisko programistyczne Eclipse, Netbeans, Aptana Studio, Zend Studio:</p>\r\n<ul>\r\n    <li>Eclipse - <a href="http://www.eclipse.org/">www.eclipse.org/</a></li>\r\n    <li>Netbeans - <a href="http://netbeans.org/">netbeans.org/</a></li>\r\n    <li>Aptana Studio - <a href="http://www.aptana.com/">www.aptana.com/</a></li>\r\n    <li>Zend Studio - <a href="http://www.zend.com/products/studio/">www.zend.com/products/studio/</a></li>\r\n</ul>'),
(2, 'Stworzenie projektu.', '<p align="JUSTIFY" style="margin-bottom: 0cm;">Nadszedł czas na pobranie Zend Framework ze strony <a href="http://framework.zend.com/download/latest">http://framework.zend.com/download/latest</a> wybieramy full lub minimal jak kto woli. Po pobraniu rozpakowujemy paczkę do katalogu nazwijmy go <em>ZendFramework</em>.   Teraz zajmiemy się stworzeniem pierwszego projektu, Zend Framework ma   narzędzie Zend Tool dzięki, któremu możemy stworzyć nasz projekt w  łatwy i szybki sposób. Opis konfiguracji Zend Tool&#160; <a href="http://framework.zend.com/manual/en/zend.tool.framework.clitool.html">http://framework.zend.com/manual/en/zend.tool.framework.clitool.html</a>. Przechodzimy do wiersza poleceń, wprowadzamy:</p>\r\n<p align="JUSTIFY" style="margin-bottom: 0cm;" class="zf"><em>zf show version</em></p>\r\n<p align="JUSTIFY" style="margin-bottom: 0cm;">wyświetli nam wersje Frameworka np:</p>\r\n<p align="JUSTIFY" class="zf" style="margin-bottom: 0cm;"><em>Zend Framework Version: 1.11.9</em></p>\r\n<p align="JUSTIFY" style="margin-bottom: 0cm;">Przechodzimy do katalogu głównego naszego serwera i wprowadzamy w wierszu poleceń:</p>\r\n<p align="JUSTIFY" style="margin-bottom: 0cm;" class="zf"><em>zf create project Projekt</em></p>\r\n<p align="JUSTIFY" style="margin-bottom: 0cm;">Zend Tool stworzył za nas całość struktury katalogów, która wygląda tak:</p>\r\n<ol>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">Projekt</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|-- 	application</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- Bootstrap.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- configs</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|&#160; &#160;`-- application.ini</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- controllers</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|&#160; &#160;|-- ErrorController.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|&#160; &#160;`-- IndexController.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- models</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;`-- views</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160; &#160; &#160;|-- helpers</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160; &#160; &#160;`-- scripts</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160; &#160; &#160; &#160; &#160;|-- error</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160; &#160; &#160; &#160; &#160;|&#160; &#160;`-- error.phtml</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160; &#160; &#160; &#160; &#160;`-- index</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160; &#160; &#160; &#160; &#160; &#160; &#160;`-- index.phtml</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|-- 	library</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|-- 	public</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- .htaccess</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;`-- index.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">`-- 	tests</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm;"><font color="#000000">&#160; 	&#160; <font face="Courier New, Courier, monospace"><span style="font-style: normal;"><span style="font-weight: normal;">|-- 	application</span></span></font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm;"><font color="#000000">&#160; 	&#160; <font face="Courier New, Courier, monospace"><span style="font-style: normal;"><span style="font-weight: normal;">|&#160; 	&#160;`-- bootstrap.php</span></span></font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm;"><font color="#000000">&#160; 	&#160; <font face="Courier New, Courier, monospace"><span style="font-style: normal;"><span style="font-weight: normal;">|-- 	library</span></span></font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm;"><font color="#000000">&#160; 	&#160; <font face="Courier New, Courier, monospace"><span style="font-style: normal;"><span style="font-weight: normal;">|&#160; 	&#160;`-- bootstrap.php</span></span></font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">`-- 	phpunit.xml</font></font></p>\r\n    </li>\r\n</ol>\r\n<p><font color="#000000"><font face="Courier New, Courier, monospace"> </font></font></p>\r\n<p style="margin-bottom: 0cm; font-style: normal; font-weight: normal; text-align: justify;"><font color="#000000">Do folderu <em>"projekt/library"</em> kopiujemy katalog <em>"Zend"</em> z paczki <font color="#000000"><font face="Courier New, Courier, monospace"><a href="http://framework.zend.com/download/latest"><span style="font-family: Times New Roman;">http://framework.zend.com/download/latest</span></a>(<em>"ZendFramework/library/Zend"</em>).</font></font></font></p>\r\n<p style="text-align: justify;">Przechodzimy do przeglądarki internetowej wprowadzamy adres&#160;<a href="http://localhost/projekt/public">localhost/projekt/public</a>  naszym oczom powinna się ukazać strona startowa Zend Framework.</p>'),
(3, 'MVC.', '<p style="text-align: justify;">Akronim MVC oznacza Model-View-Controller(pol. Model-Widok-Kontroler) jest to wzorzec projektowy. Zend Framework korzysta właśnie z tego wzorca. Opisy tego wzorca:</p>\r\n<ul>\r\n    <li><a href="http://pl.wikipedia.org/wiki/Model-View-Controller">http://pl.wikipedia.org/wiki/Model-View-Controller</a></li>\r\n    <li><a href="http://php.pl/Wortal/Artykuly/Proces-tworzenia-aplikacji/Tlumaczenia/Model-View-Controller">http://php.pl/Wortal/Artykuly/PHP/Architektura/Wprowadzenie-do-MVC</a></li>\r\n    <li><a href="http://framework.zend.com/manual/en/learning.quickstart.intro.html">http://framework.zend.com/manual/en/learning.quickstart.intro.html</a></li>\r\n</ul>\r\n<p style="text-align: justify;">Pokażę teraz jak działa kontroler oraz widok, modelem zajmiemy się w&#160; kolejnym artykule. Po wprowadzeniu do przeglądarki adresu&#160;<a href="http://localhost/projekt/public">localhost/projekt/public</a> naszym oczom ukazuję się strona, która korzysta domyślnie z kontrolera "<em>IndexController.php</em>" oraz widoku "<em>index.phtml</em>". To samo otrzymamy wprowadzając adres <a href="http://localhost/projekt/public/index/index">localhost/projekt/public/index/index</a>. Kontroler wraz z widokiem znajdują się w katalogu "<em>application</em>" naszego projektu.</p>\r\n<ol>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">Projekt</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|-- 	application</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	Bootstrap.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	configs</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|&#160; 	&#160;`-- application.ini</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	controllers</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|&#160; 	&#160;|-- ErrorController.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|&#160; 	&#160;`-- IndexController.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	models</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;`-- 	views</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160; 	&#160; &#160;|-- helpers</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160; 	&#160; &#160;`-- scripts</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160; 	&#160; &#160; &#160; &#160;|-- error</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160; 	&#160; &#160; &#160; &#160;|&#160; &#160;`-- error.phtml</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160; 	&#160; &#160; &#160; &#160;`-- index</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160; 	&#160; &#160; &#160; &#160; &#160; &#160;`-- index.phtml</font></font></p>\r\n    </li>\r\n</ol>\r\n<p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;">Otwieramy plik "<em>IndexController.php</em>" jego zawartość wygląda tak:<code class="html plain"><br />\r\n</code></p>\r\n<div id="kod"><br />\r\n<script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\nclass IndexController extends Zend_Controller_Action\r\n\r\n{\r\n\r\npublic function init()\r\n\r\n{\r\n\r\n/* Initialize action controller here */\r\n\r\n}\r\n\r\npublic function indexAction()\r\n\r\n{\r\n\r\n// action body\r\n\r\n}\r\n\r\n}\r\n]]></script></div>\r\n<div>&#160;</div>\r\n<p style="text-align: justify;">Standardowo tak wygląda kod kontrolera mamy nazwę klasy „<em>IndexController</em>” taką jak plik "<em>IndexController.php</em>". Klasa dziedziczy „<em>Zend_Controller_Action</em>”. W klasie mamy metodę „<em>public function indexAction</em>”. Pliki widoku są w katalogu "<em>views/scripts</em>" odpowiednio dla kontrolera "<em>IndexController</em>" jest stworzony katalog "<em>index</em>" w którym znajduje się plik "<em>index.phtml</em>"(wszystkie widoki są z rozszerzeniem phtml). Plik widoku "<em>index.phtml</em>" jest odpowiedni dla metody "<em>indexAction()</em>". Dla przykładu stworzymy nową akcję dla kontrolera "<em>IndexController</em>". Naszą akcję nazwiemy „<em>test</em>”. Można wszystko dodać ręcznie ale skorzystamy z narzędzia Zend Tool, uruchamiamy wiersz poleceń przechodzimy do głównego katalogu naszego projektu i wprowadzamy komendę:</p>\r\n<p class="zf" style="text-align: justify;">zf create action test index</p>\r\n<p style="text-align: justify;">Ponownie otwieramy zawartość pliku kontrolera "<em>IndexController.php</em>". Pojawiła się nowa akcja:</p>\r\n<p>&#160;</p>\r\n<div id="kod">\r\n<p><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\npublic function testAction()\r\n\r\n{\r\n\r\n// action body\r\n\r\n}\r\n]]></script></p>\r\n</div>\r\n<p>Plik widoku dla tej akcji nosi nazwę "<em>test.phtml</em>" i znajduje się w katalogu "<em>views/scripts/index</em>". Otwieramy zawartość pliku "<em>test.phtml</em>" usuwamy wszystko i wprowadzamy kod:</p>\r\n<div id="kod">\r\n<p><script type="syntaxhighlighter" class="brush: html"><![CDATA[\r\n<p>Hellow World</p>\r\n]]></script></p>\r\n</div>\r\n<p>Teraz w przeglądarce wprowadzamy adres&#160;<a href="http://localhost/projekt/public/index/test">localhost/projekt/public/index/test</a> widzimy napis:<br />\r\n<br />\r\nHellow World</p>'),
(4, 'Layout', '<p>Aby zacząć korzystać z Layout wprowadzamy w wierszu poleceń :</p>\r\n<p class="zf">zf enable layout</p>\r\n<p>Ta komenda tworzy nowy wpis w pliku application.ini</p>\r\n<p>resources.layout.layoutPath = APPLICATION_PATH "layouts/scripts"</p>\r\n<p>oraz plik layout.phtml w katalogu application/layouts/scripts/.</p>\r\n<p>Dodajemy zasób:</p>\r\n<p>resources.layout.layout = "layout"</p>\r\n<p>Ta linijka informuje aplikację jak nazywa się nasz layout korzystamy z tego zasobu w przypadku gdy chcemy mieć dwa layouty dla strony głównej oraz panelu administracyjnego.</p>\r\n<p>W layout.phtml za wyświetlenie zawartości strony odpowiedzialna jest ta linia kodu:</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\n&lt;?php echo $this-&gt;layout()-&gt;content ?&gt;\r\n]]></script></div>\r\n<p>Teraz dodamy typ dokumentu "xHTML Doctype", kodowanie, słowa kluczowe, tytuł dla naszej aplikacji. Aby to zrobić w pliku Bootstrap.php musimy dodać metodę chronioną , która zaczyna się od _init. W tym przypadku chcemy zaincjalizować doctype więc stworzymy _initDoctype() metodę w klasie pliku Bootstrap.php:</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\nprotected function _initDocType()\r\n{\r\n$this-&gt;bootstrap(''view'');\r\n$view = $this-&gt;getResource(''View'');\r\n$view-&gt;doctype(''XHTML1_STRICT'');\r\n$view->headMeta()->appendHttpEquiv(''ContentType'', ''text/html; charset=utf-8'')\r\n->appendName(''keywords'', ''Projekt, Zend Framework'');\r\n$view->headTitle()->setSeparator('' - '');\r\n$view->headTitle(''Projekt'');\r\n}\r\n]]></script></div>\r\n<p>Natomiast w pliku layout.phtml dodajemy wpis na samej górze</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\n<?php echo $this->doctype();?>\r\n<html xmlns="http://www.w3.org/1999/xhtml">\r\n	<head>\r\n		<?php echo $this->headMeta(); ?> \r\n		<?php echo $this->headTitle(); ?>\r\n	</head>\r\n]]></script></div>\r\n<p>Dzięki czemu dodamy doctype, kodowanie, słowa kluczowe, tytuł :</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: html"><![CDATA[\r\n&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;\r\n&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;\r\n&#160;&#160; &#160;&lt;head&gt;\r\n&#160;&#160; &#160;&#160;&#160; &#160;&lt;meta http-equiv="ContentType" content="text/html; charset=utf-8" /&gt;\r\n&lt;meta name="keywords" content="Projekt, Zend Framework" /&gt;\r\n&#160;&#160; &#160;&#160;&#160; &#160;&lt;title&gt;Projekt&lt;/title&gt;\r\n]]></script></div>'),
(5, 'Połączenie do bazy danych.', '<p style="text-align: justify;">Połączenie do bazy danych oraz dodanie przestrzeni nazw. W pierwszej kolejności stwórzmy w bazie danych MySQL przykładową bazę danych "projekt" oraz tabelkę z danymi.</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: sql"><![CDATA[\r\nCREATE DATABASE `projekt` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;\r\nUSE `projekt`;\r\n\r\n\r\nCREATE TABLE `books` (\r\n&#160; `id` int(11) NOT NULL auto_increment,\r\n&#160; `title` varchar(255) collate utf8_unicode_ci NOT NULL,\r\n&#160; `author` varchar(255) collate utf8_unicode_ci NOT NULL,\r\n&#160; PRIMARY KEY&#160; (`id`)\r\n) ENGINE=InnoDB&#160; DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=3 ;\r\n\r\nINSERT INTO `books` (`id`, `title`, `author`) VALUES\r\n(1, ''Połączenie z bazą danych'', ''Kowalski''),\r\n(2, ''Wzorzec projektowy MVC'', ''Nowak'');\r\n]]></script></div>\r\n<p>Zanim zabierzemy się do ustawienia połączenia z bazą danych. Stwórzmy kontroler i akcje z którymi będziemy pracować, wprowadzamy w wierszu poleceń:</p>\r\n<p class="zf">zf create controller <code class="sql plain">books</code></p>\r\n<p class="zf">zf create action list <code class="sql plain">books</code></p>\r\n<p>Połączenie z bazą danych ustawiamy w pliku konfiguracyjnym&#160; application.ini znajduje się w katalogu config.</p>\r\n<ol>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">Projekt</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|-- 	application</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- Bootstrap.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- configs</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|&#160; &#160;`-- application.ini</font></font></p>\r\n    </li>\r\n</ol>\r\n<p><br />\r\nOtwieramy plik application.ini.</p>\r\n<p>[production]<br />\r\nphpSettings.display_startup_errors = 0<br />\r\nphpSettings.display_errors = 0<br />\r\nincludePaths.library = APPLICATION_PATH "/../library"<br />\r\nbootstrap.path = APPLICATION_PATH "/Bootstrap.php"<br />\r\nbootstrap.class = "Bootstrap"<br />\r\nappnamespace = "Application"<br />\r\nresources.frontController.controllerDirectory = APPLICATION_PATH "/controllers"<br />\r\nresources.frontController.params.displayExceptions = 0<br />\r\n<br />\r\n[staging : production]<br />\r\n<br />\r\n[testing : production]<br />\r\nphpSettings.display_startup_errors = 1<br />\r\nphpSettings.display_errors = 1<br />\r\n<br />\r\n[development : production]<br />\r\nphpSettings.display_startup_errors = 1<br />\r\nphpSettings.display_errors = 1<br />\r\nresources.frontController.params.displayExceptions = 1<br />\r\n<br />\r\n<br />\r\nPod linią resources.frontController.params.displayExceptions = 0 dodajemy:<br />\r\n<br />\r\nresources.db.adapter = mysqli<br />\r\nresources.db.isDefaultAdapter = true<br />\r\nresources.db.params.host = localhost<br />\r\nresources.db.params.username = root<br />\r\nresources.db.params.password = <br />\r\nresources.db.params.dbname = projekt<br />\r\nresources.db.params.charset = ''utf8''<br />\r\n<br />\r\nresources.db.adapter Tutaj podajemy z jakiej bazy danych korzystamy dla mysql mysqli.<br />\r\nresources.db.params.host = podajemy nazwę hosta<br />\r\nresources.db.params.username = podajemy nazwę użytkownika<br />\r\nresources.db.params.password = hasło<br />\r\nresources.db.params.dbname = nazwę bazy danych <br />\r\nresources.db.params.charset = kodowanie znaków z jakiej ma korzystać baza danych<br />\r\n<br />\r\nDo pliku Bootstrap.php dodajemy metodę dzięki czemu wyświetlanie danych z bazy będzie w kodowaniu utf-8.</p>\r\n<p>&#160;</p>\r\n<div id="kod"><script class="brush: php" type="syntaxhighlighter">\r\npublic function _initDatabase() {\r\n&#160;&#160;&#160;&#160;&#160;&#160;&#160; $this-&gt;bootstrapDb();\r\n&#160;&#160;&#160;&#160;&#160;&#160;&#160; $db = $this-&gt;getResource(''db'');\r\n&#160;&#160;&#160;&#160;&#160;&#160;&#160; $db-&gt;query("SET NAMES ''utf8''");\r\n&#160;&#160;&#160;&#160;&#160;&#160;&#160; $db-&gt;query("SET CHARACTER SET ''utf8''");\r\n&#160;&#160;&#160;&#160;&#160;&#160;&#160; return $db;\r\n}\r\n\r\n]]></script></div>\r\n<p>W modelu, umieszczamy kod, który odpowiada za działanie na bazie danych. W katalogu „models” tworzymy plik books.php. <br />\r\n<br />\r\nZanim przejdziemy do kodu pliku books.php dodamy automatyczne ładowanie klas. Przejdzmy do pliku Bootstrap.php i dodajmy ten kod</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\n protected function _initAutoload() {\r\n&#160;&#160;&#160; &#160;&#160;&#160; $modelLoader = new Zend_Application_Module_Autoloader(array(\r\n&#160;&#160;&#160; &#160;&#160;&#160; ''namespace''=&gt; ''Projekt_'',\r\n&#160;&#160;&#160; &#160;&#160;&#160; ''basePath''=&gt;APPLICATION_PATH));&#160;&#160;&#160;\r\n&#160;&#160;&#160; &#160;&#160;&#160; return $modelLoader;\r\n}\r\n\r\n]]></script></div>\r\n<p>Twożmy obiekt $modelLoader określamy dwa parametry:<br />\r\n&#160;&#160;&#160; &#160;&#160;&#160; ''namespace''=&gt; ''Projekt_'',<br />\r\nCzyli przestrzeń nazw klasy,<br />\r\n&#160;&#160;&#160; &#160;&#160;&#160; ''basePath''=&gt;APPLICATION_PATH));<br />\r\nparamter określa ściężkę do katalogu „Application”.<br />\r\n<br />\r\nTeraz gdy stworzymy plik modelu books.php w katlogu models.</p>\r\n<ol>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">Projekt</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|-- 	application</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	Bootstrap.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	configs</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	controllers</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier">|&#160; &#160;|-- 	models</font></font></p>\r\n    </li>\r\n</ol>\r\n<p>Nadajmey mu przedsrostek „Projekt_” następnie nazwę katalogu czyli Models, wygląda to w ten sposób:</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\n&lt;?php\r\nclass Projekt_Model_Books extends Zend_Db_Table_Abstract\r\n{\r\n&#160;&#160;&#160; protected $_name = ''books'';\r\n}\r\n]]></script></div>\r\n<p>W klasie tworzymy chroninoną zmienną&#160; $_name która jest równa nazwie naszej tabeli czyli books.</p>\r\n<p><br />\r\nTeraz skorzystamy z klasy&#160; „Projekt_Model_Books” więc przechodzimy do akcji list w kontrolerze books i tworzymy obiekt naszej klasy<br />\r\noraz metodę fetchall() dzięki, której wyświetlimy dane z bazy:</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\npublic function listAction() {\r\n$articles = new Projekt_Model_Articles();\r\n$this-&gt;view-&gt;articles = $articles-&gt;fetchall();\r\n}\r\n]]></script></div>\r\n<p>W widoku akcji list „list.phtml” korzystamy z pętli foreach do wyświetlenia wyników z bazy</p>\r\n<div id="kod"><script type="syntaxhighlighter" class="brush: php"><![CDATA[\r\n&lt;?php foreach($this-&gt;articles as $key =&gt; $value): ?&gt;\r\nNumer artykułu:&lt;p&gt;&lt;?php echo $value-&gt;id ?&gt;&lt;/p&gt;&lt;br /&gt;\r\nTytuł:&lt;p&gt;&lt;?php echo $value-&gt;title ?&gt;&lt;p/&gt;&lt;br /&gt;\r\nAutor:&lt;p&gt;&lt;?php echo $value-&gt; author ?&gt;&lt;p&gt;&lt;br /&gt;&#160;&#160;&#160; \r\n&lt;?php endforeach; ?&gt; \r\n]]></script></div>\r\n<p>Wprowadzamy adres do przeglądarki http://localhost/projekt/public/books/list <br />\r\nJeśli wszstko jest poprawnie nie dostaniemy komunikatu błędu tylko wynik z bazy danych.</p>'),
(6, 'Wyświetlanie błędów.', '<p>W pliku application.ini:</p>\r\n<ol>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">Projekt</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|-- 	application</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- Bootstrap.php</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|-- configs</font></font></p>\r\n    </li>\r\n    <li>\r\n    <p align="JUSTIFY" style="margin-bottom: 0cm; font-style: normal; font-weight: normal;"><font color="#000000"><font face="Courier New, Courier, monospace">|&#160; 	&#160;|&#160; &#160;`-- application.ini</font></font></p>\r\n    </li>\r\n</ol>\r\n<p>Mamy 3 zasoby, które odpowiedzialne są za wyświetlanie błędów/wyjątków należy je zminieć wartość 0 na 1.</p>\r\n<p>phpSettings.display_startup_errors = 1</p>\r\n<p>phpSettings.display_errors = 1</p>\r\n<p>resources.frontController.params.displayExceptions = 1</p>\r\n<p style="margin-bottom: 0cm">Oczywiście prócz ustwionego wyświetlania błedów w aplikacji. Należy mieć poprawnie skonfigurowany plik konfiguracyjny php.ini.</p>\r\n<p style="margin-bottom: 0cm">error_reporting  =  E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT</p>\r\n<p style="margin-bottom: 0cm">display_errors = On</p>');

-- --------------------------------------------------------

--
-- Struktura tabeli dla  `portfolio`
--

CREATE TABLE IF NOT EXISTS `portfolio` (
  `i_id` int(11) NOT NULL AUTO_INCREMENT,
  `i_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `i_text` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`i_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=2 ;

--
-- Zrzut danych tabeli `portfolio`
--

INSERT INTO `portfolio` (`i_id`, `i_name`, `i_text`) VALUES
(1, 'Elementywww', '<p>Strona, na kt&oacute;rej umieszczam informacje dotyczące PHP, jQuery, javascript, Frameworka Zend. Jestem początkującym programistą ,kt&oacute;ry chce przy pomocy tej strony pokazać co potrafi i znaleźć pracę&nbsp; związaną z tworzeniem &nbsp; stron www.</p>');

-- --------------------------------------------------------

--
-- Struktura tabeli dla  `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) DEFAULT NULL,
  `password` varchar(250) DEFAULT NULL,
  `first_name` varchar(50) DEFAULT NULL,
  `last_name` varchar(50) DEFAULT NULL,
  `role` varchar(25) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Zrzut danych tabeli `users`
--

INSERT INTO `users` (`id`, `username`, `password`, `first_name`, `last_name`, `role`) VALUES
(1, 'Szymon', 'ca9cf387f83ec17f39f9bd178b17e10d', 'Szymon', 'Dav', 'Administrator');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
